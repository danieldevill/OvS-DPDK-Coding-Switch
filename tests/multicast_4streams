#!/bin/bash

#Streaming Test for Multicast 
#Setup: 4 Streams
#
#	A->B,C,D
#	B->A,C,D
#	C->A,B,D
#	D->A,B,C
#

echo "Test running.."

hosts='debA debB debC debD'
mlcst_addrs='67 68 69 70'
hostport=10020

duration=100
bw=8
interval=1

#Start servers (multicast receving end)
for host in $hosts
do
	for mlcst_addr in $mlcst_addrs
	do
		sshpass -v -p 'debian' ssh debian@10.10.11.188 -p $hostport 'iperf -s -u -B 224.0.67.'$mlcst_addr' -i '$interval' -y C > '$host'_mcst4_'$mlcst_addr &
		sleep 1
	done
	hostport=$((hostport + 1))
	echo "$host servers up."
done
hostport=10020

#Start Clients (Multicast transmitting end) on hosts A-D
#Host: debA
sshpass -v -p 'debian' ssh debian@10.10.11.188 -p 10020 'iperf -c 224.0.67.67 -u --ttl 5 -t '$duration' -l 64 -b '$bw'M' &
#Host: debB
sshpass -v -p 'debian' ssh debian@10.10.11.188 -p 10021 'iperf -c 224.0.67.68 -u --ttl 5 -t '$duration' -l 64 -b '$bw'M' &
#Host: debC
sshpass -v -p 'debian' ssh debian@10.10.11.188 -p 10022 'iperf -c 224.0.67.69 -u --ttl 5 -t '$duration' -l 64 -b '$bw'M' &
#Host: debD
sshpass -v -p 'debian' ssh debian@10.10.11.188 -p 10023 'iperf -c 224.0.67.70 -u --ttl 5 -t '$duration' -l 64 -b '$bw'M' &&

#Kill all iperf servers. For some reason I need to run pkill iperf twice
sshpass -v -p 'debian' ssh debian@10.10.11.188 -p 10020 'for pid in $(pidof iperf); do kill -9 $pid && sleep 0.5; done && pidof iperf' ;
sshpass -v -p 'debian' ssh debian@10.10.11.188 -p 10021 'for pid in $(pidof iperf); do kill -9 $pid && sleep 0.5; done && pidof iperf' ;
sshpass -v -p 'debian' ssh debian@10.10.11.188 -p 10022 'for pid in $(pidof iperf); do kill -9 $pid && sleep 0.5; done && pidof iperf' ;
sshpass -v -p 'debian' ssh debian@10.10.11.188 -p 10023 'for pid in $(pidof iperf); do kill -9 $pid && sleep 0.5; done && pidof iperf' ;

sleep 5

#Collect data and output stats in total to file, and then output that file to terminal.
for host in $hosts
do
	for mlcst_addr in $mlcst_addrs
	do
		#Copy test results to testdata
		sshpass -v -p 'debian' scp -P $hostport -r debian@10.10.11.188:~/"$host"_mcst4_"$mlcst_addr" ~/Working/OvS-DPDK-Coding-Switch/tests/testdata
	done
	hostport=$((hostport + 1))
done

#Call python script to process testdata
python ~/Working/OvS-DPDK-Coding-Switch/pyscripts/process_mlcst_test.py $duration

echo "Test Complete."

cat ~/Working/OvS-DPDK-Coding-Switch/tests/multicast_4streams.results

